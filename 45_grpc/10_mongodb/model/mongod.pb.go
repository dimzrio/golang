// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mongod.proto

package model

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Database struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Author               string   `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Appsname             string   `protobuf:"bytes,3,opt,name=appsname,proto3" json:"appsname,omitempty"`
	Language             string   `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Database) Reset()         { *m = Database{} }
func (m *Database) String() string { return proto.CompactTextString(m) }
func (*Database) ProtoMessage()    {}
func (*Database) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e3a059fdb7e5a4a, []int{0}
}

func (m *Database) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Database.Unmarshal(m, b)
}
func (m *Database) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Database.Marshal(b, m, deterministic)
}
func (m *Database) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Database.Merge(m, src)
}
func (m *Database) XXX_Size() int {
	return xxx_messageInfo_Database.Size(m)
}
func (m *Database) XXX_DiscardUnknown() {
	xxx_messageInfo_Database.DiscardUnknown(m)
}

var xxx_messageInfo_Database proto.InternalMessageInfo

func (m *Database) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Database) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Database) GetAppsname() string {
	if m != nil {
		return m.Appsname
	}
	return ""
}

func (m *Database) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type CreateReq struct {
	Db                   *Database `protobuf:"bytes,1,opt,name=db,proto3" json:"db,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateReq) Reset()         { *m = CreateReq{} }
func (m *CreateReq) String() string { return proto.CompactTextString(m) }
func (*CreateReq) ProtoMessage()    {}
func (*CreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e3a059fdb7e5a4a, []int{1}
}

func (m *CreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReq.Unmarshal(m, b)
}
func (m *CreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReq.Marshal(b, m, deterministic)
}
func (m *CreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReq.Merge(m, src)
}
func (m *CreateReq) XXX_Size() int {
	return xxx_messageInfo_CreateReq.Size(m)
}
func (m *CreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReq proto.InternalMessageInfo

func (m *CreateReq) GetDb() *Database {
	if m != nil {
		return m.Db
	}
	return nil
}

type CreateResp struct {
	Db                   *Database `protobuf:"bytes,1,opt,name=db,proto3" json:"db,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateResp) Reset()         { *m = CreateResp{} }
func (m *CreateResp) String() string { return proto.CompactTextString(m) }
func (*CreateResp) ProtoMessage()    {}
func (*CreateResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e3a059fdb7e5a4a, []int{2}
}

func (m *CreateResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResp.Unmarshal(m, b)
}
func (m *CreateResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResp.Marshal(b, m, deterministic)
}
func (m *CreateResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResp.Merge(m, src)
}
func (m *CreateResp) XXX_Size() int {
	return xxx_messageInfo_CreateResp.Size(m)
}
func (m *CreateResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResp proto.InternalMessageInfo

func (m *CreateResp) GetDb() *Database {
	if m != nil {
		return m.Db
	}
	return nil
}

type ReadReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadReq) Reset()         { *m = ReadReq{} }
func (m *ReadReq) String() string { return proto.CompactTextString(m) }
func (*ReadReq) ProtoMessage()    {}
func (*ReadReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e3a059fdb7e5a4a, []int{3}
}

func (m *ReadReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadReq.Unmarshal(m, b)
}
func (m *ReadReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadReq.Marshal(b, m, deterministic)
}
func (m *ReadReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadReq.Merge(m, src)
}
func (m *ReadReq) XXX_Size() int {
	return xxx_messageInfo_ReadReq.Size(m)
}
func (m *ReadReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReadReq proto.InternalMessageInfo

func (m *ReadReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadResp struct {
	Db                   *Database `protobuf:"bytes,1,opt,name=db,proto3" json:"db,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReadResp) Reset()         { *m = ReadResp{} }
func (m *ReadResp) String() string { return proto.CompactTextString(m) }
func (*ReadResp) ProtoMessage()    {}
func (*ReadResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e3a059fdb7e5a4a, []int{4}
}

func (m *ReadResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResp.Unmarshal(m, b)
}
func (m *ReadResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResp.Marshal(b, m, deterministic)
}
func (m *ReadResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResp.Merge(m, src)
}
func (m *ReadResp) XXX_Size() int {
	return xxx_messageInfo_ReadResp.Size(m)
}
func (m *ReadResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResp.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResp proto.InternalMessageInfo

func (m *ReadResp) GetDb() *Database {
	if m != nil {
		return m.Db
	}
	return nil
}

type UpdateReq struct {
	Db                   *Database `protobuf:"bytes,1,opt,name=db,proto3" json:"db,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateReq) Reset()         { *m = UpdateReq{} }
func (m *UpdateReq) String() string { return proto.CompactTextString(m) }
func (*UpdateReq) ProtoMessage()    {}
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e3a059fdb7e5a4a, []int{5}
}

func (m *UpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReq.Unmarshal(m, b)
}
func (m *UpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReq.Marshal(b, m, deterministic)
}
func (m *UpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReq.Merge(m, src)
}
func (m *UpdateReq) XXX_Size() int {
	return xxx_messageInfo_UpdateReq.Size(m)
}
func (m *UpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReq proto.InternalMessageInfo

func (m *UpdateReq) GetDb() *Database {
	if m != nil {
		return m.Db
	}
	return nil
}

type UpdateResp struct {
	Db                   *Database `protobuf:"bytes,1,opt,name=db,proto3" json:"db,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateResp) Reset()         { *m = UpdateResp{} }
func (m *UpdateResp) String() string { return proto.CompactTextString(m) }
func (*UpdateResp) ProtoMessage()    {}
func (*UpdateResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e3a059fdb7e5a4a, []int{6}
}

func (m *UpdateResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResp.Unmarshal(m, b)
}
func (m *UpdateResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResp.Marshal(b, m, deterministic)
}
func (m *UpdateResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResp.Merge(m, src)
}
func (m *UpdateResp) XXX_Size() int {
	return xxx_messageInfo_UpdateResp.Size(m)
}
func (m *UpdateResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResp proto.InternalMessageInfo

func (m *UpdateResp) GetDb() *Database {
	if m != nil {
		return m.Db
	}
	return nil
}

type DeleteReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReq) Reset()         { *m = DeleteReq{} }
func (m *DeleteReq) String() string { return proto.CompactTextString(m) }
func (*DeleteReq) ProtoMessage()    {}
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e3a059fdb7e5a4a, []int{7}
}

func (m *DeleteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReq.Unmarshal(m, b)
}
func (m *DeleteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReq.Marshal(b, m, deterministic)
}
func (m *DeleteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReq.Merge(m, src)
}
func (m *DeleteReq) XXX_Size() int {
	return xxx_messageInfo_DeleteReq.Size(m)
}
func (m *DeleteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReq proto.InternalMessageInfo

func (m *DeleteReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteResp struct {
	Db                   *Database `protobuf:"bytes,1,opt,name=db,proto3" json:"db,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DeleteResp) Reset()         { *m = DeleteResp{} }
func (m *DeleteResp) String() string { return proto.CompactTextString(m) }
func (*DeleteResp) ProtoMessage()    {}
func (*DeleteResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e3a059fdb7e5a4a, []int{8}
}

func (m *DeleteResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResp.Unmarshal(m, b)
}
func (m *DeleteResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResp.Marshal(b, m, deterministic)
}
func (m *DeleteResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResp.Merge(m, src)
}
func (m *DeleteResp) XXX_Size() int {
	return xxx_messageInfo_DeleteResp.Size(m)
}
func (m *DeleteResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResp proto.InternalMessageInfo

func (m *DeleteResp) GetDb() *Database {
	if m != nil {
		return m.Db
	}
	return nil
}

type ListReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReq) Reset()         { *m = ListReq{} }
func (m *ListReq) String() string { return proto.CompactTextString(m) }
func (*ListReq) ProtoMessage()    {}
func (*ListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e3a059fdb7e5a4a, []int{9}
}

func (m *ListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReq.Unmarshal(m, b)
}
func (m *ListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReq.Marshal(b, m, deterministic)
}
func (m *ListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReq.Merge(m, src)
}
func (m *ListReq) XXX_Size() int {
	return xxx_messageInfo_ListReq.Size(m)
}
func (m *ListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListReq proto.InternalMessageInfo

type ListResp struct {
	Db                   *Database `protobuf:"bytes,1,opt,name=db,proto3" json:"db,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListResp) Reset()         { *m = ListResp{} }
func (m *ListResp) String() string { return proto.CompactTextString(m) }
func (*ListResp) ProtoMessage()    {}
func (*ListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e3a059fdb7e5a4a, []int{10}
}

func (m *ListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResp.Unmarshal(m, b)
}
func (m *ListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResp.Marshal(b, m, deterministic)
}
func (m *ListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResp.Merge(m, src)
}
func (m *ListResp) XXX_Size() int {
	return xxx_messageInfo_ListResp.Size(m)
}
func (m *ListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListResp proto.InternalMessageInfo

func (m *ListResp) GetDb() *Database {
	if m != nil {
		return m.Db
	}
	return nil
}

func init() {
	proto.RegisterType((*Database)(nil), "model.Database")
	proto.RegisterType((*CreateReq)(nil), "model.CreateReq")
	proto.RegisterType((*CreateResp)(nil), "model.CreateResp")
	proto.RegisterType((*ReadReq)(nil), "model.ReadReq")
	proto.RegisterType((*ReadResp)(nil), "model.ReadResp")
	proto.RegisterType((*UpdateReq)(nil), "model.UpdateReq")
	proto.RegisterType((*UpdateResp)(nil), "model.UpdateResp")
	proto.RegisterType((*DeleteReq)(nil), "model.DeleteReq")
	proto.RegisterType((*DeleteResp)(nil), "model.DeleteResp")
	proto.RegisterType((*ListReq)(nil), "model.ListReq")
	proto.RegisterType((*ListResp)(nil), "model.ListResp")
}

func init() { proto.RegisterFile("mongod.proto", fileDescriptor_2e3a059fdb7e5a4a) }

var fileDescriptor_2e3a059fdb7e5a4a = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xc1, 0x52, 0xb3, 0x30,
	0x14, 0x85, 0x07, 0xfe, 0xfe, 0xb4, 0xb9, 0x3a, 0xad, 0x66, 0xe1, 0x60, 0x5d, 0xe8, 0xb0, 0x51,
	0xc7, 0xd2, 0x71, 0xea, 0x1b, 0x54, 0x96, 0xae, 0x70, 0xdc, 0xb8, 0x0b, 0xe6, 0x0e, 0xe2, 0x00,
	0x49, 0x09, 0xf5, 0xa9, 0x7d, 0x08, 0x27, 0x84, 0x64, 0x2a, 0x1b, 0x71, 0xc7, 0xcd, 0x39, 0x1c,
	0xce, 0xfd, 0x08, 0x1c, 0x57, 0xa2, 0xce, 0x05, 0x5f, 0xcb, 0x46, 0xb4, 0x82, 0xfe, 0xaf, 0x04,
	0xc7, 0x32, 0xfa, 0x80, 0x59, 0xc2, 0x5a, 0x96, 0x31, 0x85, 0x74, 0x0e, 0x7e, 0xc1, 0x43, 0xef,
	0xca, 0xbb, 0x21, 0xa9, 0x5f, 0x70, 0x7a, 0x06, 0x01, 0xdb, 0xb7, 0xef, 0xa2, 0x09, 0xfd, 0xee,
	0xac, 0x9f, 0xe8, 0x12, 0x66, 0x4c, 0x4a, 0x55, 0xb3, 0x0a, 0xc3, 0x7f, 0x9d, 0xe2, 0x66, 0xad,
	0x95, 0xac, 0xce, 0xf7, 0x2c, 0xc7, 0x70, 0x62, 0x34, 0x3b, 0x47, 0x2b, 0x20, 0x8f, 0x0d, 0xb2,
	0x16, 0x53, 0xdc, 0xd1, 0x4b, 0xf0, 0x79, 0xd6, 0x7d, 0xec, 0x68, 0xb3, 0x58, 0x77, 0x65, 0xd6,
	0xb6, 0x49, 0xea, 0xf3, 0x2c, 0x8a, 0x01, 0xac, 0x5b, 0xc9, 0xdf, 0xed, 0xe7, 0x30, 0x4d, 0x91,
	0x71, 0x1d, 0x3d, 0xd8, 0x23, 0xba, 0x83, 0x99, 0x91, 0xc6, 0xe4, 0xac, 0x80, 0xbc, 0x48, 0xfe,
	0x87, 0x92, 0xd6, 0x3d, 0x26, 0xfc, 0x02, 0x48, 0x82, 0x25, 0x9a, 0xf0, 0x61, 0xcd, 0x18, 0xc0,
	0x8a, 0x63, 0xb2, 0x08, 0x4c, 0x9f, 0x0a, 0xd5, 0xa6, 0xb8, 0xd3, 0x0b, 0x9a, 0xc7, 0x11, 0xef,
	0x6d, 0xbe, 0x3c, 0x20, 0xc9, 0xf6, 0x19, 0x9b, 0xcf, 0xe2, 0x0d, 0x69, 0x0c, 0x81, 0xa1, 0x4c,
	0x4f, 0x7a, 0xb3, 0xfb, 0x45, 0xcb, 0xd3, 0xc1, 0x89, 0x92, 0xf4, 0x1a, 0x26, 0x1a, 0x25, 0x9d,
	0xf7, 0x52, 0x8f, 0x7c, 0xb9, 0xf8, 0x31, 0x2b, 0xa9, 0x73, 0x0d, 0x18, 0x97, 0xeb, 0xa8, 0xba,
	0xdc, 0x03, 0x72, 0x31, 0x04, 0x66, 0x77, 0x67, 0x77, 0x9c, 0x9c, 0xfd, 0x00, 0xce, 0x2d, 0x4c,
	0xf4, 0xc2, 0xae, 0x46, 0x0f, 0xc2, 0xd5, 0xb0, 0x34, 0xee, 0xbd, 0xed, 0xf4, 0xd5, 0xdc, 0xf4,
	0x2c, 0xe8, 0xee, 0xfd, 0xc3, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x86, 0xe8, 0x21, 0x07,
	0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DBServiceClient is the client API for DBService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DBServiceClient interface {
	Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateResp, error)
	Read(ctx context.Context, in *ReadReq, opts ...grpc.CallOption) (*ReadResp, error)
	Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateResp, error)
	Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteResp, error)
	List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (DBService_ListClient, error)
}

type dBServiceClient struct {
	cc *grpc.ClientConn
}

func NewDBServiceClient(cc *grpc.ClientConn) DBServiceClient {
	return &dBServiceClient{cc}
}

func (c *dBServiceClient) Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateResp, error) {
	out := new(CreateResp)
	err := c.cc.Invoke(ctx, "/model.DBService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dBServiceClient) Read(ctx context.Context, in *ReadReq, opts ...grpc.CallOption) (*ReadResp, error) {
	out := new(ReadResp)
	err := c.cc.Invoke(ctx, "/model.DBService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dBServiceClient) Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateResp, error) {
	out := new(UpdateResp)
	err := c.cc.Invoke(ctx, "/model.DBService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dBServiceClient) Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteResp, error) {
	out := new(DeleteResp)
	err := c.cc.Invoke(ctx, "/model.DBService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dBServiceClient) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (DBService_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DBService_serviceDesc.Streams[0], "/model.DBService/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &dBServiceListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DBService_ListClient interface {
	Recv() (*ListResp, error)
	grpc.ClientStream
}

type dBServiceListClient struct {
	grpc.ClientStream
}

func (x *dBServiceListClient) Recv() (*ListResp, error) {
	m := new(ListResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DBServiceServer is the server API for DBService service.
type DBServiceServer interface {
	Create(context.Context, *CreateReq) (*CreateResp, error)
	Read(context.Context, *ReadReq) (*ReadResp, error)
	Update(context.Context, *UpdateReq) (*UpdateResp, error)
	Delete(context.Context, *DeleteReq) (*DeleteResp, error)
	List(*ListReq, DBService_ListServer) error
}

// UnimplementedDBServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDBServiceServer struct {
}

func (*UnimplementedDBServiceServer) Create(ctx context.Context, req *CreateReq) (*CreateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedDBServiceServer) Read(ctx context.Context, req *ReadReq) (*ReadResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedDBServiceServer) Update(ctx context.Context, req *UpdateReq) (*UpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedDBServiceServer) Delete(ctx context.Context, req *DeleteReq) (*DeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedDBServiceServer) List(req *ListReq, srv DBService_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterDBServiceServer(s *grpc.Server, srv DBServiceServer) {
	s.RegisterService(&_DBService_serviceDesc, srv)
}

func _DBService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DBServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.DBService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DBServiceServer).Create(ctx, req.(*CreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DBService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DBServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.DBService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DBServiceServer).Read(ctx, req.(*ReadReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DBService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DBServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.DBService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DBServiceServer).Update(ctx, req.(*UpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DBService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DBServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.DBService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DBServiceServer).Delete(ctx, req.(*DeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DBService_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DBServiceServer).List(m, &dBServiceListServer{stream})
}

type DBService_ListServer interface {
	Send(*ListResp) error
	grpc.ServerStream
}

type dBServiceListServer struct {
	grpc.ServerStream
}

func (x *dBServiceListServer) Send(m *ListResp) error {
	return x.ServerStream.SendMsg(m)
}

var _DBService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.DBService",
	HandlerType: (*DBServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _DBService_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _DBService_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _DBService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DBService_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _DBService_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "mongod.proto",
}
