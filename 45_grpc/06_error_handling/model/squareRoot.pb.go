// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/squareRoot.proto

package model

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SquareReq struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareReq) Reset()         { *m = SquareReq{} }
func (m *SquareReq) String() string { return proto.CompactTextString(m) }
func (*SquareReq) ProtoMessage()    {}
func (*SquareReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8256fecd378a1976, []int{0}
}

func (m *SquareReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareReq.Unmarshal(m, b)
}
func (m *SquareReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareReq.Marshal(b, m, deterministic)
}
func (m *SquareReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareReq.Merge(m, src)
}
func (m *SquareReq) XXX_Size() int {
	return xxx_messageInfo_SquareReq.Size(m)
}
func (m *SquareReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareReq.DiscardUnknown(m)
}

var xxx_messageInfo_SquareReq proto.InternalMessageInfo

func (m *SquareReq) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type SquareResp struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareResp) Reset()         { *m = SquareResp{} }
func (m *SquareResp) String() string { return proto.CompactTextString(m) }
func (*SquareResp) ProtoMessage()    {}
func (*SquareResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_8256fecd378a1976, []int{1}
}

func (m *SquareResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareResp.Unmarshal(m, b)
}
func (m *SquareResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareResp.Marshal(b, m, deterministic)
}
func (m *SquareResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareResp.Merge(m, src)
}
func (m *SquareResp) XXX_Size() int {
	return xxx_messageInfo_SquareResp.Size(m)
}
func (m *SquareResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareResp.DiscardUnknown(m)
}

var xxx_messageInfo_SquareResp proto.InternalMessageInfo

func (m *SquareResp) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*SquareReq)(nil), "model.squareReq")
	proto.RegisterType((*SquareResp)(nil), "model.squareResp")
}

func init() { proto.RegisterFile("model/squareRoot.proto", fileDescriptor_8256fecd378a1976) }

var fileDescriptor_8256fecd378a1976 = []byte{
	// 147 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcb, 0xcd, 0x4f, 0x49,
	0xcd, 0xd1, 0x2f, 0x2e, 0x2c, 0x4d, 0x2c, 0x4a, 0x0d, 0xca, 0xcf, 0x2f, 0xd1, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x62, 0x05, 0x8b, 0x2b, 0x29, 0x73, 0x71, 0x42, 0xa5, 0x52, 0x0b, 0x85, 0xc4,
	0xb8, 0xd8, 0xf2, 0x4a, 0x73, 0x93, 0x52, 0x8b, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0xa0,
	0x3c, 0x25, 0x15, 0x2e, 0x2e, 0x98, 0xa2, 0xe2, 0x02, 0x90, 0xaa, 0xa2, 0xd4, 0xe2, 0xd2, 0x9c,
	0x12, 0xb0, 0x2a, 0xc6, 0x20, 0x28, 0xcf, 0xc8, 0x85, 0x8b, 0x17, 0xa2, 0x2a, 0x38, 0xb5, 0xa8,
	0x2c, 0x33, 0x39, 0x55, 0xc8, 0x18, 0xae, 0x2d, 0x3f, 0xbf, 0x44, 0x48, 0x40, 0x0f, 0x6c, 0xa3,
	0x1e, 0xdc, 0x3a, 0x29, 0x41, 0x34, 0x91, 0xe2, 0x02, 0x25, 0x06, 0x27, 0xf6, 0x28, 0x88, 0xcb,
	0x92, 0xd8, 0xc0, 0xee, 0x34, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x75, 0xbd, 0xee, 0x4b, 0xc1,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SquareServiceClient is the client API for SquareService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SquareServiceClient interface {
	SquareRoot(ctx context.Context, in *SquareReq, opts ...grpc.CallOption) (*SquareResp, error)
}

type squareServiceClient struct {
	cc *grpc.ClientConn
}

func NewSquareServiceClient(cc *grpc.ClientConn) SquareServiceClient {
	return &squareServiceClient{cc}
}

func (c *squareServiceClient) SquareRoot(ctx context.Context, in *SquareReq, opts ...grpc.CallOption) (*SquareResp, error) {
	out := new(SquareResp)
	err := c.cc.Invoke(ctx, "/model.squareService/squareRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SquareServiceServer is the server API for SquareService service.
type SquareServiceServer interface {
	SquareRoot(context.Context, *SquareReq) (*SquareResp, error)
}

func RegisterSquareServiceServer(s *grpc.Server, srv SquareServiceServer) {
	s.RegisterService(&_SquareService_serviceDesc, srv)
}

func _SquareService_SquareRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SquareReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SquareServiceServer).SquareRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.squareService/SquareRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SquareServiceServer).SquareRoot(ctx, req.(*SquareReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SquareService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.squareService",
	HandlerType: (*SquareServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "squareRoot",
			Handler:    _SquareService_SquareRoot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "model/squareRoot.proto",
}
