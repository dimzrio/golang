// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/prime.proto

package model

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PrimeReq struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeReq) Reset()         { *m = PrimeReq{} }
func (m *PrimeReq) String() string { return proto.CompactTextString(m) }
func (*PrimeReq) ProtoMessage()    {}
func (*PrimeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_81c4161bb7b41082, []int{0}
}

func (m *PrimeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeReq.Unmarshal(m, b)
}
func (m *PrimeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeReq.Marshal(b, m, deterministic)
}
func (m *PrimeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeReq.Merge(m, src)
}
func (m *PrimeReq) XXX_Size() int {
	return xxx_messageInfo_PrimeReq.Size(m)
}
func (m *PrimeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeReq.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeReq proto.InternalMessageInfo

func (m *PrimeReq) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeResp struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeResp) Reset()         { *m = PrimeResp{} }
func (m *PrimeResp) String() string { return proto.CompactTextString(m) }
func (*PrimeResp) ProtoMessage()    {}
func (*PrimeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_81c4161bb7b41082, []int{1}
}

func (m *PrimeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeResp.Unmarshal(m, b)
}
func (m *PrimeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeResp.Marshal(b, m, deterministic)
}
func (m *PrimeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeResp.Merge(m, src)
}
func (m *PrimeResp) XXX_Size() int {
	return xxx_messageInfo_PrimeResp.Size(m)
}
func (m *PrimeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeResp.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeResp proto.InternalMessageInfo

func (m *PrimeResp) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*PrimeReq)(nil), "model.primeReq")
	proto.RegisterType((*PrimeResp)(nil), "model.primeResp")
}

func init() { proto.RegisterFile("model/prime.proto", fileDescriptor_81c4161bb7b41082) }

var fileDescriptor_81c4161bb7b41082 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcc, 0xcd, 0x4f, 0x49,
	0xcd, 0xd1, 0x2f, 0x28, 0xca, 0xcc, 0x4d, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05,
	0x0b, 0x29, 0x29, 0x71, 0x71, 0x80, 0x45, 0x83, 0x52, 0x0b, 0x85, 0xc4, 0xb8, 0xd8, 0xf2, 0x4a,
	0x73, 0x93, 0x52, 0x8b, 0x24, 0x18, 0x15, 0x18, 0x35, 0x98, 0x83, 0xa0, 0x3c, 0x25, 0x65, 0x2e,
	0x4e, 0xa8, 0x9a, 0xe2, 0x02, 0x90, 0xa2, 0xa2, 0xd4, 0xe2, 0xd2, 0x9c, 0x12, 0x98, 0x22, 0x08,
	0xcf, 0xc8, 0x93, 0x8b, 0x07, 0xac, 0x28, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0xc8, 0x92,
	0x4b, 0x00, 0xcc, 0x77, 0x49, 0x4d, 0xce, 0xcf, 0x2d, 0xc8, 0x2f, 0xc9, 0xcc, 0xcf, 0x13, 0xe2,
	0xd7, 0x03, 0x5b, 0xaa, 0x07, 0xb3, 0x51, 0x4a, 0x00, 0x55, 0xa0, 0xb8, 0x40, 0x89, 0xc1, 0x80,
	0xd1, 0x89, 0x3d, 0x0a, 0xe2, 0xb8, 0x24, 0x36, 0xb0, 0x53, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xf1, 0xcf, 0x7d, 0x4f, 0xbf, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PrimeServiceClient is the client API for PrimeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PrimeServiceClient interface {
	PrimeDecompotion(ctx context.Context, in *PrimeReq, opts ...grpc.CallOption) (PrimeService_PrimeDecompotionClient, error)
}

type primeServiceClient struct {
	cc *grpc.ClientConn
}

func NewPrimeServiceClient(cc *grpc.ClientConn) PrimeServiceClient {
	return &primeServiceClient{cc}
}

func (c *primeServiceClient) PrimeDecompotion(ctx context.Context, in *PrimeReq, opts ...grpc.CallOption) (PrimeService_PrimeDecompotionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PrimeService_serviceDesc.Streams[0], "/model.primeService/primeDecompotion", opts...)
	if err != nil {
		return nil, err
	}
	x := &primeServicePrimeDecompotionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PrimeService_PrimeDecompotionClient interface {
	Recv() (*PrimeResp, error)
	grpc.ClientStream
}

type primeServicePrimeDecompotionClient struct {
	grpc.ClientStream
}

func (x *primeServicePrimeDecompotionClient) Recv() (*PrimeResp, error) {
	m := new(PrimeResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PrimeServiceServer is the server API for PrimeService service.
type PrimeServiceServer interface {
	PrimeDecompotion(*PrimeReq, PrimeService_PrimeDecompotionServer) error
}

func RegisterPrimeServiceServer(s *grpc.Server, srv PrimeServiceServer) {
	s.RegisterService(&_PrimeService_serviceDesc, srv)
}

func _PrimeService_PrimeDecompotion_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PrimeServiceServer).PrimeDecompotion(m, &primeServicePrimeDecompotionServer{stream})
}

type PrimeService_PrimeDecompotionServer interface {
	Send(*PrimeResp) error
	grpc.ServerStream
}

type primeServicePrimeDecompotionServer struct {
	grpc.ServerStream
}

func (x *primeServicePrimeDecompotionServer) Send(m *PrimeResp) error {
	return x.ServerStream.SendMsg(m)
}

var _PrimeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.primeService",
	HandlerType: (*PrimeServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "primeDecompotion",
			Handler:       _PrimeService_PrimeDecompotion_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "model/prime.proto",
}
