// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/greeting.proto

package model

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GreetingReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetingReq) Reset()         { *m = GreetingReq{} }
func (m *GreetingReq) String() string { return proto.CompactTextString(m) }
func (*GreetingReq) ProtoMessage()    {}
func (*GreetingReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8b32ad2f3df280e, []int{0}
}

func (m *GreetingReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetingReq.Unmarshal(m, b)
}
func (m *GreetingReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetingReq.Marshal(b, m, deterministic)
}
func (m *GreetingReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetingReq.Merge(m, src)
}
func (m *GreetingReq) XXX_Size() int {
	return xxx_messageInfo_GreetingReq.Size(m)
}
func (m *GreetingReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetingReq.DiscardUnknown(m)
}

var xxx_messageInfo_GreetingReq proto.InternalMessageInfo

func (m *GreetingReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GreetingResp struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetingResp) Reset()         { *m = GreetingResp{} }
func (m *GreetingResp) String() string { return proto.CompactTextString(m) }
func (*GreetingResp) ProtoMessage()    {}
func (*GreetingResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8b32ad2f3df280e, []int{1}
}

func (m *GreetingResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetingResp.Unmarshal(m, b)
}
func (m *GreetingResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetingResp.Marshal(b, m, deterministic)
}
func (m *GreetingResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetingResp.Merge(m, src)
}
func (m *GreetingResp) XXX_Size() int {
	return xxx_messageInfo_GreetingResp.Size(m)
}
func (m *GreetingResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetingResp.DiscardUnknown(m)
}

var xxx_messageInfo_GreetingResp proto.InternalMessageInfo

func (m *GreetingResp) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*GreetingReq)(nil), "model.greetingReq")
	proto.RegisterType((*GreetingResp)(nil), "model.greetingResp")
}

func init() { proto.RegisterFile("model/greeting.proto", fileDescriptor_f8b32ad2f3df280e) }

var fileDescriptor_f8b32ad2f3df280e = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc9, 0xcd, 0x4f, 0x49,
	0xcd, 0xd1, 0x4f, 0x2f, 0x4a, 0x4d, 0x2d, 0xc9, 0xcc, 0x4b, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0x62, 0x05, 0x8b, 0x2a, 0x29, 0x72, 0x71, 0xc3, 0x24, 0x82, 0x52, 0x0b, 0x85, 0x84, 0xb8,
	0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x35,
	0x2e, 0x1e, 0x84, 0x92, 0xe2, 0x02, 0x21, 0x31, 0x2e, 0xb6, 0xa2, 0xd4, 0xe2, 0xd2, 0x9c, 0x12,
	0xa8, 0x2a, 0x28, 0xcf, 0xc8, 0x9b, 0x8b, 0x1b, 0xa4, 0x3e, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39,
	0x55, 0xc8, 0x86, 0x8b, 0xd7, 0x25, 0xb5, 0x24, 0x31, 0x33, 0xa7, 0x38, 0x20, 0xb5, 0xa8, 0x38,
	0x3f, 0x4f, 0x48, 0x48, 0x0f, 0x6c, 0xa5, 0x1e, 0x92, 0x7d, 0x52, 0xc2, 0x18, 0x62, 0xc5, 0x05,
	0x4a, 0x0c, 0x06, 0x8c, 0x4e, 0xec, 0x51, 0x10, 0x07, 0x26, 0xb1, 0x81, 0x9d, 0x6b, 0x0c, 0x08,
	0x00, 0x00, 0xff, 0xff, 0x1c, 0x26, 0x3a, 0xdd, 0xc6, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NameServiceClient is the client API for NameService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NameServiceClient interface {
	DetailsPerson(ctx context.Context, in *GreetingReq, opts ...grpc.CallOption) (NameService_DetailsPersonClient, error)
}

type nameServiceClient struct {
	cc *grpc.ClientConn
}

func NewNameServiceClient(cc *grpc.ClientConn) NameServiceClient {
	return &nameServiceClient{cc}
}

func (c *nameServiceClient) DetailsPerson(ctx context.Context, in *GreetingReq, opts ...grpc.CallOption) (NameService_DetailsPersonClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NameService_serviceDesc.Streams[0], "/model.nameService/DetailsPerson", opts...)
	if err != nil {
		return nil, err
	}
	x := &nameServiceDetailsPersonClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NameService_DetailsPersonClient interface {
	Recv() (*GreetingResp, error)
	grpc.ClientStream
}

type nameServiceDetailsPersonClient struct {
	grpc.ClientStream
}

func (x *nameServiceDetailsPersonClient) Recv() (*GreetingResp, error) {
	m := new(GreetingResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NameServiceServer is the server API for NameService service.
type NameServiceServer interface {
	DetailsPerson(*GreetingReq, NameService_DetailsPersonServer) error
}

func RegisterNameServiceServer(s *grpc.Server, srv NameServiceServer) {
	s.RegisterService(&_NameService_serviceDesc, srv)
}

func _NameService_DetailsPerson_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GreetingReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NameServiceServer).DetailsPerson(m, &nameServiceDetailsPersonServer{stream})
}

type NameService_DetailsPersonServer interface {
	Send(*GreetingResp) error
	grpc.ServerStream
}

type nameServiceDetailsPersonServer struct {
	grpc.ServerStream
}

func (x *nameServiceDetailsPersonServer) Send(m *GreetingResp) error {
	return x.ServerStream.SendMsg(m)
}

var _NameService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.nameService",
	HandlerType: (*NameServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DetailsPerson",
			Handler:       _NameService_DetailsPerson_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "model/greeting.proto",
}
