// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/exponent2.proto

package model

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExponentReq struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExponentReq) Reset()         { *m = ExponentReq{} }
func (m *ExponentReq) String() string { return proto.CompactTextString(m) }
func (*ExponentReq) ProtoMessage()    {}
func (*ExponentReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe7877ecfd61b82b, []int{0}
}

func (m *ExponentReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExponentReq.Unmarshal(m, b)
}
func (m *ExponentReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExponentReq.Marshal(b, m, deterministic)
}
func (m *ExponentReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExponentReq.Merge(m, src)
}
func (m *ExponentReq) XXX_Size() int {
	return xxx_messageInfo_ExponentReq.Size(m)
}
func (m *ExponentReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ExponentReq.DiscardUnknown(m)
}

var xxx_messageInfo_ExponentReq proto.InternalMessageInfo

func (m *ExponentReq) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type ExponentResp struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Number               int32    `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExponentResp) Reset()         { *m = ExponentResp{} }
func (m *ExponentResp) String() string { return proto.CompactTextString(m) }
func (*ExponentResp) ProtoMessage()    {}
func (*ExponentResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe7877ecfd61b82b, []int{1}
}

func (m *ExponentResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExponentResp.Unmarshal(m, b)
}
func (m *ExponentResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExponentResp.Marshal(b, m, deterministic)
}
func (m *ExponentResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExponentResp.Merge(m, src)
}
func (m *ExponentResp) XXX_Size() int {
	return xxx_messageInfo_ExponentResp.Size(m)
}
func (m *ExponentResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ExponentResp.DiscardUnknown(m)
}

var xxx_messageInfo_ExponentResp proto.InternalMessageInfo

func (m *ExponentResp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *ExponentResp) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func init() {
	proto.RegisterType((*ExponentReq)(nil), "model.exponentReq")
	proto.RegisterType((*ExponentResp)(nil), "model.exponentResp")
}

func init() { proto.RegisterFile("model/exponent2.proto", fileDescriptor_fe7877ecfd61b82b) }

var fileDescriptor_fe7877ecfd61b82b = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcd, 0xcd, 0x4f, 0x49,
	0xcd, 0xd1, 0x4f, 0xad, 0x28, 0xc8, 0xcf, 0x4b, 0xcd, 0x2b, 0x31, 0xd2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x62, 0x05, 0x0b, 0x2b, 0xa9, 0x72, 0x71, 0xc3, 0x64, 0x82, 0x52, 0x0b, 0x85, 0xc4,
	0xb8, 0xd8, 0xf2, 0x4a, 0x73, 0x93, 0x52, 0x8b, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0xa0,
	0x3c, 0x25, 0x3b, 0x2e, 0x1e, 0x84, 0xb2, 0xe2, 0x02, 0x90, 0xba, 0xa2, 0xd4, 0xe2, 0xd2, 0x9c,
	0x12, 0x98, 0x3a, 0x08, 0x0f, 0x49, 0x3f, 0x13, 0xb2, 0x7e, 0x23, 0x4f, 0x2e, 0x4e, 0xb8, 0x03,
	0x84, 0x6c, 0xb8, 0xb8, 0xd3, 0x53, 0x4b, 0x5c, 0xa1, 0x7c, 0x21, 0x21, 0x3d, 0xb0, 0x53, 0xf4,
	0x90, 0xdc, 0x21, 0x25, 0x8c, 0x21, 0x56, 0x5c, 0xa0, 0xc4, 0xa0, 0xc1, 0x68, 0xc0, 0xe8, 0xc4,
	0x1e, 0x05, 0x71, 0x7a, 0x12, 0x1b, 0xd8, 0x23, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5a,
	0x27, 0x1b, 0xd4, 0xe1, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Exponent2Client is the client API for Exponent2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Exponent2Client interface {
	GetExponent(ctx context.Context, opts ...grpc.CallOption) (Exponent2_GetExponentClient, error)
}

type exponent2Client struct {
	cc *grpc.ClientConn
}

func NewExponent2Client(cc *grpc.ClientConn) Exponent2Client {
	return &exponent2Client{cc}
}

func (c *exponent2Client) GetExponent(ctx context.Context, opts ...grpc.CallOption) (Exponent2_GetExponentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Exponent2_serviceDesc.Streams[0], "/model.exponent2/getExponent", opts...)
	if err != nil {
		return nil, err
	}
	x := &exponent2GetExponentClient{stream}
	return x, nil
}

type Exponent2_GetExponentClient interface {
	Send(*ExponentReq) error
	Recv() (*ExponentResp, error)
	grpc.ClientStream
}

type exponent2GetExponentClient struct {
	grpc.ClientStream
}

func (x *exponent2GetExponentClient) Send(m *ExponentReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *exponent2GetExponentClient) Recv() (*ExponentResp, error) {
	m := new(ExponentResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Exponent2Server is the server API for Exponent2 service.
type Exponent2Server interface {
	GetExponent(Exponent2_GetExponentServer) error
}

func RegisterExponent2Server(s *grpc.Server, srv Exponent2Server) {
	s.RegisterService(&_Exponent2_serviceDesc, srv)
}

func _Exponent2_GetExponent_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(Exponent2Server).GetExponent(&exponent2GetExponentServer{stream})
}

type Exponent2_GetExponentServer interface {
	Send(*ExponentResp) error
	Recv() (*ExponentReq, error)
	grpc.ServerStream
}

type exponent2GetExponentServer struct {
	grpc.ServerStream
}

func (x *exponent2GetExponentServer) Send(m *ExponentResp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *exponent2GetExponentServer) Recv() (*ExponentReq, error) {
	m := new(ExponentReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Exponent2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.exponent2",
	HandlerType: (*Exponent2Server)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "getExponent",
			Handler:       _Exponent2_GetExponent_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "model/exponent2.proto",
}
